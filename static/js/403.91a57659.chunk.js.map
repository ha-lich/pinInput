{"version":3,"file":"static/js/403.91a57659.chunk.js","mappings":"0SAOe,SAASA,KACtBC,EAAAA,EAAAA,YAAU,WACRC,OAAOC,SAAS,EAAG,EACrB,GAAG,IACH,IAAQC,EAASC,EAAAA,EAAAA,KACjBC,GAA0BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA+BC,EAAAA,EAAAA,MAAsBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA9CG,EAAKD,EAAA,GAAIE,EAASF,EAAA,GAATE,UACVC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAyB,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACnBZ,EAAMQ,GAAQ,KAAD,EAAtBE,EAAAG,KACLC,KAAKC,OACjBnB,GAAS,GACV,wBAAAc,EAAAM,OAAA,GAAAT,EAAA,KACF,gBALaU,GAAA,OAAAd,EAAAe,MAAA,KAAAC,UAAA,KAOd,OACEC,EAAAA,EAAAA,KAAA,WAASC,GAAG,aAAYC,UACtBF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACC,QAAQ,SAASC,UAAU,cAAaH,UAC3CF,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAACC,KAAM,EAAEL,UACXM,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,KAAK,eACLL,UAAU,aAMVvB,SAAUA,EAASoB,SAAA,EAEnBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,OAAMH,UACnBF,EAAAA,EAAAA,KAAA,OACEW,IAAI,6EACJC,IAAI,QAGRZ,EAAAA,EAAAA,KAACS,EAAAA,EAAAA,KAAS,CACRC,KAAK,KACLG,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,mBAAoBb,UAEvDF,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CACJC,QAAQjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAY,CAACb,UAAU,wBAChCc,YAAY,qBAGhBnB,EAAAA,EAAAA,KAACS,EAAAA,EAAAA,KAAS,CACRC,KAAK,WACLG,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,yBAA0Bb,UAE7DF,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CACJC,QAAQjB,EAAAA,EAAAA,KAACoB,EAAAA,EAAY,CAACf,UAAU,wBAChCgB,KAAK,WACLF,YAAY,sBACZG,aAAa,UAGjBtB,EAAAA,EAAAA,KAAC/B,EAAI,CAACoD,KAAK,SAASE,QAAShD,EAAM2B,SAAC,2CAGpCF,EAAAA,EAAAA,KAACS,EAAAA,EAAAA,KAAS,CAACJ,UAAU,cAAcmB,SAAO,EAAAtB,UACxCF,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CACLJ,KAAK,UACLK,SAAS,SACTC,OAAK,EACLC,QAAS/C,EAAUqB,UAEnBF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,sBAQnB,C","sources":["views/pages/login/index.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Button, Col, Form, Input, Row, Typography } from 'antd';\r\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { useAuthLoginMutation } from '@apps/services/authService';\r\nimport { PayloadLoginProps } from '@globalTypes/globalTypes';\r\nimport './style.scss';\r\n\r\nexport default function LoginPage() {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  const { Text } = Typography;\r\n  const [error, setError] = useState(false);\r\n  const [login, { isLoading }] = useAuthLoginMutation();\r\n  const onFinish = async (values: PayloadLoginProps) => {\r\n    const response: any = await login(values);\r\n    if (!response.data.token) {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <article id=\"login-page\">\r\n      <Row justify=\"center\" className=\"w-100 mb-30\">\r\n        <Col span={6}>\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            // initialValues={{\r\n            //   remember: true,\r\n            //   email: \"super_admin@gmail.com\",\r\n            //   password: \"super_admin@gmail.com\",\r\n            // }}\r\n            onFinish={onFinish}\r\n          >\r\n            <div className=\"logo\">\r\n              <img\r\n                src=\"https://news.vmogroup.com/wp-content/uploads/2023/04/VMO_Logo_Positive.png\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <Form.Item\r\n              name=\"id\"\r\n              rules={[{ required: true, message: 'ID is required' }]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                placeholder=\"Enter your ID\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[{ required: true, message: 'Password is required' }]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                autoComplete=\"on\"\r\n              />\r\n            </Form.Item>\r\n            <Text type=\"danger\" hidden={!error}>\r\n              The username or password is incorrect\r\n            </Text>\r\n            <Form.Item className=\"text-center\" noStyle>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                block\r\n                loading={isLoading}\r\n              >\r\n                <b>Login</b>\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </article>\r\n  );\r\n}\r\n"],"names":["LoginPage","useEffect","window","scrollTo","Text","Typography","_useState","useState","_useState2","_slicedToArray","error","setError","_useAuthLoginMutation","useAuthLoginMutation","_useAuthLoginMutation2","login","isLoading","onFinish","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","sent","data","token","stop","_x","apply","arguments","_jsx","id","children","Row","justify","className","Col","span","_jsxs","Form","name","src","alt","rules","required","message","Input","prefix","UserOutlined","placeholder","LockOutlined","type","autoComplete","hidden","noStyle","Button","htmlType","block","loading"],"sourceRoot":""}